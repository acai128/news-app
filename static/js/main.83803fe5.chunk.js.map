{"version":3,"sources":["components/NewsListHeading.js","components/NewsList.js","components/Pagination.js","SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["NewsListHeading","props","heading","NewsList","urlToImage","source","author","title","publishedAt","url","className","src","alt","href","Pagination","resultsPerPage","totalResults","paginate","pageNumbers","i","Math","ceil","push","map","number","onClick","SearchBar","useState","searchInput","setSearchInput","results","setResults","currentPage","setCurrentPage","API_Key","process","useEffect","a","Axios","get","res","data","articles","console","log","getResults","indexOfLastResult","indexOfFirstResult","currentResults","slice","value","placeholder","onChange","event","target","name","length","pageNumber","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83803fe5.chunk.js","sourcesContent":["import React from 'react'; \n\nfunction NewsListHeading(props){\n  return (\n    <h1>{props.heading}</h1>\n  )\n}\n\nexport default NewsListHeading; ","// import { PreviousMap } from 'postcss';\nimport React from 'react'; \n\nfunction NewsList({urlToImage, source, author, title, publishedAt, url}){\n  return (\n  <div>\n    <table className=\"table-fixed\">\n    <thead>\n      <tr>\n        <th className=\"w-1/2 px-4 py-2 bg-gray-300 border\">Image</th>\n        <th className=\"w-1/4 px-4 py-2 bg-gray-300 border\">Source</th>\n        <th className=\"w-1/4 px-4 py-2 bg-gray-300 border\">Author, Title, Date, & URL</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td className=\"border px-4 py-2\"><img className=\"object-contain\" src={urlToImage} alt=\"Article\"/></td>\n        <td className=\"border px-4 py-2 text-center\">{source}</td>\n        <td className=\"border px-4 py-2 text-left leading-loose\">{author}, {title}, {publishedAt}, <a className=\"bg-gray-500 px-2 py-2 rounded-lg text-xs p-0\" href= {url}>Link to article</a></td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n  );\n};\n\nexport default NewsList; ","import React from 'react'; \n\nfunction Pagination({ resultsPerPage, totalResults, paginate }) {\n  const pageNumbers = []; \n\n  for(let i = 1; i <= Math.ceil(totalResults / resultsPerPage); i++) {\n    pageNumbers.push(i); \n  }\n  return (\n    <div className=\"py-2\">\n      <ul className=\"flex pl-0 rounded list-none flex-wrap\">\n        {pageNumbers.map(number => (\n          <li className=\"first:ml-0 text-xs font-semibold flex w-8 h-8 mx-1 p-0 rounded-full items-center justify-center leading-tight relative border border-solid \n          border-blueGray-500 bg-white text-blueGray-500\" key={number}>\n            <a onClick={() => paginate(number)}href=\"!#\">\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </div>\n  ); \n}; \n\nexport default Pagination; ","import Axios from 'axios';\nimport React, { useEffect, useState }from 'react'; \nimport NewsListHeading from './components/NewsListHeading';\nimport NewsList from './components/NewsList'; \nimport Pagination from './components/Pagination';\n\nfunction SearchBar() {\n  const [searchInput, setSearchInput] = useState(''); \n  const [results, setResults] = useState([]); \n  const [currentPage, setCurrentPage] = useState(1); \n  const [resultsPerPage] = useState(10); \n\n  const API_Key = `${process.env.REACT_APP_API_KEY}`; \n\n  useEffect(() => {\n    const getResults = async () => {\n      const res = await Axios.get(`https://newsapi.org/v2/everything?q=${searchInput}&apiKey=${API_Key}&pageSize=100`); \n      setResults(res.data.articles)\n      console.log(res.data.articles)\n    }; \n    getResults(); \n  }, [searchInput]); \n\n  // Get current results\n  const indexOfLastResult = currentPage * resultsPerPage; \n  const indexOfFirstResult = indexOfLastResult - resultsPerPage; \n  const currentResults = results.slice(indexOfFirstResult, indexOfLastResult) \n\n  //Change page \n  const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n  return (\n    <div>\n      <div className=\"text-3xl font-extrabold text-center p-10 bg-gray-600 text-white\"  > \n      <NewsListHeading className=\"sm:max-w-xl\" heading=\"News Search\"/>\n      </div>\n      <input\n        className=\"w-full rounded ml-1 flex border-black border p-2 mb-10\"\n        value={searchInput}\n        placeholder=\"Type to search\"\n        onChange={(event) => setSearchInput(event.target.value)}\n      >\n      </input>\n      <div>\n        {currentResults.map(({ urlToImage, source, author, title, publishedAt, url }) => (\n          <NewsList \n          urlToImage={urlToImage} \n          source={source.name}\n          author={author} \n          title={title} \n          publishedAt={publishedAt} \n          url={url}\n          />\n        ))}\n      </div>\n      <div>\n        <Pagination resultsPerPage={resultsPerPage} totalResults={results.length} paginate={paginate}/>\n      </div>\n       {/* <div>\n         <table>\n           <thead>\n           <tr>\n            <th className=\"w-1/2 px-4 py-2 bg-gray-300 border\">Image</th>\n            <th className=\"w-1/4 px-4 py-2 bg-gray-300 border\">Source</th>\n            <th className=\"w-1/4 px-4 py-2 bg-gray-300 border\">Author, Title, Date, & URL</th>\n          </tr>\n           </thead>\n           <tbody>\n        {currentResults.map(({ urlToImage, source, author, title, publishedAt, url }) => (\n          <NewsList \n          urlToImage={urlToImage} \n          source={source.name}\n          author={author} \n          title={title} \n          publishedAt={publishedAt} \n          url={url}\n          />\n        ))}\n        </tbody>\n        </table>\n      </div>\n      <div>\n        <Pagination resultsPerPage={resultsPerPage} totalResults={results.length} paginate={paginate}/>\n      </div> */}\n    </div>\n  );\n};\n\nexport default SearchBar; ","import './App.css';\nimport SearchBar from './SearchBar';\n\nfunction App() {\n  return (\n    // <h1 className=\"text-4xl font-bold\">News Search</h1>\n    <SearchBar />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/main.css'; \nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}